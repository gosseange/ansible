---

- name: Installer PostgreSQL
  ansible.builtin.package: 
    name: 
      - postgresql
      - python3-psycopg2
    state: present
    update_cache: yes

- name: S'assurer que le service PostgreSQL est démarré
  systemd:
    name: postgresql
    state: started
    enabled: true


- name: Copier les fichiers pg_hba.conf et pg_ident.conf
  block:
    - name: Copier pg_hba.conf
      ansible.builtin.copy:
        src: pg_hba.conf
        dest: /etc/postgresql/16/main/pg_hba.conf
        owner: postgres
        group: postgres
        mode: '0640'
        backup: true
      register: hba_result

    - name: Copier pg_ident.conf
      ansible.builtin.copy:
        src: pg_ident.conf
        dest: /etc/postgresql/16/main/pg_ident.conf
        owner: postgres
        group: postgres
        mode: '0640'
        backup: true
      register: ident_result

    - name: Redémarrer PostgreSQL 16 si l'un des fichiers a été modifié
      ansible.builtin.systemd:
        name: postgresql@16-main.service
        state: restarted
        enabled: true
      when: hba_result.changed or ident_result.changed


- name: Créer l'utilisateur PostgreSQL "gvm"
  community.postgresql.postgresql_user:
    name: "{postgresql_user}"
    password: "Venus123@"
    role_attr_flags: "NOSUPERUSER"
    state: present
  become: false
  become_user: postgres

- name: Create a new database with name "{{ postgresql_db }}" 
  community.postgresql.postgresql_db:
    name: "{{ postgresql_db }}"
    comment: My test DB
  become: false
  become_user: postgres


- name: Vérifier si le rôle gvm existe, sinon le créer
  postgresql_query:
    db: "{{ postgresql_db }}"
    query: >
      DO $$
      BEGIN
        IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = 'gvm') THEN
          CREATE ROLE gvm LOGIN PASSWORD 'motdepasse' NOSUPERUSER;
        END IF;
      END
      $$;
  become: false
  become_user: postgres

- name: Créer le rôle dba avec superuser et sans héritage s'il n'existe pas
  postgresql_query:
    db: "{{ postgresql_db }}"
    query: >
      DO $$
      BEGIN
        IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = 'dba') THEN
          CREATE ROLE dba WITH SUPERUSER NOINHERIT;
        END IF;
      END
      $$;
  become: false
  become_user: postgres

- name: Accorder le rôle dba à l'utilisateur "gvm"
  postgresql_query:
    db: "{{ postgresql_db }}"
    query: "GRANT dba TO gvm;"
  become: false
  become_user: postgres


- name: Accorder le rôle dba à l'utilisateur "{{ postgresql_user }}"
  postgresql_query:
    db: "{{ postgresql_db }}"
    query: "GRANT dba TO {{ postgresql_user }};"
  become: false
  become_user: postgres
